name: ruby_event_store-browser_assets
on:
  push:
  workflow_dispatch:

jobs:
  test:
    runs-on: self-hosted
    env:
      WORKING_DIRECTORY: ruby_event_store-browser
    strategy:
      fail-fast: false
    steps:
      - uses: actions/checkout@v3
      - run: |
          nix-shell --run "make install-npm" -E"
             with import <nixpkgs> { };
             mkShell {
               inputsFrom = [
                 (import ../support/nix/nodejs.nix)
               ];
             }
           "
        working-directory: ${{ env.WORKING_DIRECTORY }}
      - run: |
          nix-shell --run "make build-npm" -E"
             with import <nixpkgs> { };
             mkShell {
               inputsFrom = [
                 (import ../support/nix/nodejs.nix)
               ];
             }
           "
        working-directory: ${{ env.WORKING_DIRECTORY }}
      - uses: actions/upload-artifact@v3
        with:
          name: ruby_event_store_browser.js
          path: ${{ env.WORKING_DIRECTORY }}/public/ruby_event_store_browser.js
      - uses: actions/upload-artifact@v3
        with:
          name: ruby_event_store_browser.js.map
          path: ${{ env.WORKING_DIRECTORY }}/public/ruby_event_store_browser.js.map
      - uses: actions/upload-artifact@v3
        with:
          name: ruby_event_store_browser.css
          path: ${{ env.WORKING_DIRECTORY }}/public/ruby_event_store_browser.css
      - uses: actions/upload-artifact@v3
        with:
          name: ruby_event_store_browser.css.map
          path: ${{ env.WORKING_DIRECTORY }}/public/ruby_event_store_browser.css.map
      - uses: aws-actions/configure-aws-credentials@v1-node16
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: eu-central-1

      - run: echo "::set-output name=short::$(git rev-parse --short=12 HEAD)"
        id: sha
      - run: |
          nix-shell --run "aws s3 sync public s3://ruby-event-store-assets/${{ steps.sha.outputs.short }}" -E"
             with import <nixpkgs> { };
             mkShell {
               inputsFrom = [
                 (import ../support/nix/aws.nix)
               ];
             }
           "
        working-directory: ${{ env.WORKING_DIRECTORY }}