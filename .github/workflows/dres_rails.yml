name: dres_rails
on:
  repository_dispatch:
    types:
      - script
  workflow_dispatch:
  schedule:
    - cron: "0 17 * * *"
  push:
    paths:
      - "contrib/dres_rails/**"
      - "contrib/dres_client/**"
      - ".github/workflows/dres_rails.yml"
      - "support/**"
  pull_request:
    types: [opened, reopened]
    paths:
      - "contrib/dres_rails/**"
      - "contrib/dres_client/**"
      - ".github/workflows/dres_rails.yml"
      - "support/**"
jobs:
  test:
    runs-on: self-hosted
    env:
      WORKING_DIRECTORY: contrib/dres_rails
      DATABASE_URL: ${{ matrix.database }}
    strategy:
      fail-fast: false
      matrix:
        include:
          - ruby: ruby_3_1
            gemfile: Gemfile
            database: postgres_11
            datatype: binary
          - ruby: ruby_2_7
            gemfile: Gemfile
            database: postgres_12
            datatype: binary
          - ruby: ruby_3_0
            gemfile: Gemfile
            database: postgres_11
            datatype: binary
          - ruby: ruby_3_1
            gemfile: Gemfile
            database: postgres_11
            datatype: json
          - ruby: ruby_3_1
            gemfile: Gemfile
            database: postgres_11
            datatype: jsonb
          - ruby: ruby_3_1
            gemfile: Gemfile
            database: postgres_12
            datatype: binary
          - ruby: ruby_3_1
            gemfile: Gemfile
            database: postgres_12
            datatype: json
          - ruby: ruby_3_1
            gemfile: Gemfile
            database: postgres_12
            datatype: jsonb
    steps:
      - uses: actions/checkout@v3
      - run: test -e ${{ matrix.gemfile }}.lock
        working-directory: ${{ env.WORKING_DIRECTORY }}
      - run: |
          nix-shell --run "make install test" -E"
            with import <nixpkgs> { };
            mkShell {
              inputsFrom = [
                (import ../../support/nix/${{ matrix.database }}.nix)
                (import ../../support/nix/${{ matrix.ruby }}.nix)
              ];
            }
          "
        working-directory: ${{ env.WORKING_DIRECTORY }}